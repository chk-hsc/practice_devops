name: Python CI/CD

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/basic-ci.yaml"
      - "basic-ci/**"
  pull_request:
    branches: [main]
    paths:
      - ".github/workflows/basic-ci.yaml"
      - "basic-ci/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Which environment to deploy to"
        required: false
        default: "dev"
      version:
        description: "Version to deploy"
        required: false
        default: "latest"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PROJECT_DIR: basic-ci

    steps:
      - uses: actions/checkout@v2

      - name: Extract Python version from pyproject.toml
        run: |
          PYTHON_VERSION=$(grep -Po '(?<=python = ")[^"]*' ${{ env.PROJECT_DIR }}/pyproject.toml | sed 's/\^//')
          echo "Python version extracted: $PYTHON_VERSION"
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Install dependencies (dev)
        run: |
          cd ${{ env.PROJECT_DIR }}
          poetry install

      - name: Run tests and collect coverage
        run: |
          cd ${{ env.PROJECT_DIR }}
          poetry run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ env.PROJECT_DIR }}
          file: ${{ env.PROJECT_DIR }}/coverage.xml
          name: ${{ env.PROJECT_DIR }}-coverage-report

  deploy:
    runs-on: ubuntu-latest
    needs: test
    env:
      PROJECT_DIR: basic-ci

    steps:
      - uses: actions/checkout@v2

      - name: Extract Python version from pyproject.toml
        run: |
          PYTHON_VERSION=$(grep -Po '(?<=python = ")[^"]*' ${{ env.PROJECT_DIR }}/pyproject.toml | sed 's/\^//')
          echo "Python version extracted: $PYTHON_VERSION"
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> ~/.bashrc
          source ~/.bashrc

      - name: Install production dependencies
        run: |
          cd ${{ env.PROJECT_DIR }}
          poetry install --no-dev

      - name: Deploy application
        run: |
          cd ${{ env.PROJECT_DIR }}
          echo "Deploying version ${{ github.event.inputs.version }} to ${{ github.event.inputs.environment }} environment"
